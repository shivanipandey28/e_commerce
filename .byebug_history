c
Product.create!(name: "Product 1", user_id: user.id, category: cat.name)
Product.create!(name: "Product 1", user_id: user.id, category: category.name)
cat = Category.create(name: "fish")
Category.create(name: "fish")
Product.create!(name: "Product 1", user_id: user.id, category: "fish")
Product.create!(name: "Product 1", user_id: user.id, category: fish)
Product.create!(name: "Product 1", user_id: user.id, category: "fish")
Product.create!(name: "Product 1", user_id: user.id)
Product.find_by(name: "Product 1", user_id: user.id)
Product.create(name: "Product 1", user_id: user.id)
Product.create(name: "Product 1", user: user_id)
user
user.save
user = User.new(email: "test3@example.com", password: "password", role: "seller")
c
@user
user
user\
products
c
(user.products)
user.products
user
(user.products).to include(product1, product2)
n
product1
product2
n
product2
product1
n
user.save
n
c
n
c
n
(user).to has_many(:products)
n
c
nc
n
(user). have_many(:products)
n
user!
user
n
c
(user).to have_many(:products)c
(user).to have_many(:products)
(user).to have_many(:products)!
products
(user).to have_many(:products)
n
user
user!
user.save!
user!
user
n
user.save!
user.save
user!
c
n
user.save
n
User.save
n
User.create(email: "test@example.com", password: "password", role: "buyer")
c
User.create(email: "test@example.com", password: "password", role: "buyer")
c
expect(user).to be_valid
user = User.create(email: "test@example.com", password: "password", role: "buyer")
user = User.new(email: "test@example.com", password: "password", role: "buyer")
User.new(email: "test@example.com", password: "password", role: "buyer")
